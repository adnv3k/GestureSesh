# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\resources\ui\main_window.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(576, 617)
        MainWindow.setMinimumSize(QtCore.QSize(0, 0))
        MainWindow.setMaximumSize(QtCore.QSize(576, 617))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(24, 43, 59))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(24, 43, 59))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(24, 43, 59))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(24, 43, 59))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(24, 43, 59))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(24, 43, 59))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(24, 43, 59))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(24, 43, 59))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(24, 43, 59))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.PlaceholderText, brush)
        MainWindow.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily(
            "Apple SD Gothic Neo"
            if sys.platform == "darwin"
            else "Nanum Gothic" if sys.platform.startswith("win") else "Noto Sans CJK"
        )
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(85)
        MainWindow.setFont(font)
        MainWindow.setFocusPolicy(QtCore.Qt.ClickFocus)
        MainWindow.setAcceptDrops(True)
        icon = QtGui.QIcon()
        icon.addPixmap(
            QtGui.QPixmap(":/icons/icons/Art1Paint Net.png"),
            QtGui.QIcon.Normal,
            QtGui.QIcon.Off,
        )
        MainWindow.setWindowIcon(icon)
        MainWindow.setToolTip("")
        MainWindow.setAccessibleName("")
        MainWindow.setAutoFillBackground(False)
        MainWindow.setStyleSheet("background: rgb(24,43,59); color: 'white'")
        MainWindow.setDocumentMode(False)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(24, 43, 59))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(24, 43, 59))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(24, 43, 59))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(24, 43, 59))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(24, 43, 59))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(24, 43, 59))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(24, 43, 59))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(24, 43, 59))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(24, 43, 59))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.PlaceholderText, brush)
        self.centralwidget.setPalette(palette)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.select_images = QtWidgets.QLabel(self.centralwidget)
        self.select_images.setMaximumSize(QtCore.QSize(16777215, 24))
        self.select_images.setStyleSheet("color: 'white';")
        self.select_images.setObjectName("select_images")
        self.verticalLayout_4.addWidget(self.select_images)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.selected_items = QtWidgets.QTextEdit(self.centralwidget)
        self.selected_items.setMinimumSize(QtCore.QSize(0, 80))
        self.selected_items.setMaximumSize(QtCore.QSize(16777215, 80))
        self.selected_items.setBaseSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily(
            "Apple SD Gothic Neo"
            if sys.platform == "darwin"
            else "Nanum Gothic" if sys.platform.startswith("win") else "Noto Sans CJK"
        )
        font.setPointSize(15)
        font.setWeight(75)
        self.selected_items.setFont(font)
        self.selected_items.setFocusPolicy(QtCore.Qt.NoFocus)
        self.selected_items.setStyleSheet("color: 'white';")
        self.selected_items.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.selected_items.setSizeAdjustPolicy(
            QtWidgets.QAbstractScrollArea.AdjustIgnored
        )
        self.selected_items.setAutoFormatting(QtWidgets.QTextEdit.AutoBulletList)
        self.selected_items.setTabChangesFocus(True)
        self.selected_items.setLineWrapMode(QtWidgets.QTextEdit.WidgetWidth)
        self.selected_items.setReadOnly(True)
        self.selected_items.setOverwriteMode(True)
        self.selected_items.setTextInteractionFlags(
            QtCore.Qt.TextSelectableByKeyboard | QtCore.Qt.TextSelectableByMouse
        )
        self.selected_items.setObjectName("selected_items")
        self.horizontalLayout.addWidget(self.selected_items)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.add_folder = QtWidgets.QPushButton(self.centralwidget)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(68, 201, 176))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(68, 201, 176))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(68, 201, 176))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(68, 201, 176))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(68, 201, 176))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(68, 201, 176))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(68, 201, 176))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(68, 201, 176))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(68, 201, 176))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.PlaceholderText, brush)
        self.add_folder.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily(
            "Apple SD Gothic Neo"
            if sys.platform == "darwin"
            else "Nanum Gothic" if sys.platform.startswith("win") else "Noto Sans CJK"
        )
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.add_folder.setFont(font)
        self.add_folder.setAutoFillBackground(False)
        self.add_folder.setStyleSheet("background: rgb(68,201,176); color: 'black';")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(
            QtGui.QPixmap(":/icons/icons/Folder Yellow.png"),
            QtGui.QIcon.Normal,
            QtGui.QIcon.Off,
        )
        self.add_folder.setIcon(icon1)
        self.add_folder.setIconSize(QtCore.QSize(24, 24))
        self.add_folder.setAutoDefault(False)
        self.add_folder.setDefault(False)
        self.add_folder.setFlat(False)
        self.add_folder.setObjectName("add_folder")
        self.verticalLayout.addWidget(self.add_folder)
        self.add_items = QtWidgets.QPushButton(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily(
            "Apple SD Gothic Neo"
            if sys.platform == "darwin"
            else "Nanum Gothic" if sys.platform.startswith("win") else "Noto Sans CJK"
        )
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.add_items.setFont(font)
        self.add_items.setStyleSheet("background: rgb(68,201,176); color: 'black';")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(
            QtGui.QPixmap(":/icons/icons/Mime Image.png"),
            QtGui.QIcon.Normal,
            QtGui.QIcon.Off,
        )
        self.add_items.setIcon(icon2)
        self.add_items.setIconSize(QtCore.QSize(24, 24))
        self.add_items.setAutoDefault(True)
        self.add_items.setFlat(False)
        self.add_items.setObjectName("add_items")
        self.verticalLayout.addWidget(self.add_items)
        self.clear_items = QtWidgets.QPushButton(self.centralwidget)
        self.clear_items.setStyleSheet("background: rgb(68,201,176); color: 'white';")
        self.clear_items.setText("")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(
            QtGui.QPixmap(":/icons/icons/Close X.png"),
            QtGui.QIcon.Normal,
            QtGui.QIcon.Off,
        )
        self.clear_items.setIcon(icon3)
        self.clear_items.setIconSize(QtCore.QSize(24, 24))
        self.clear_items.setObjectName("clear_items")
        self.verticalLayout.addWidget(self.clear_items)
        self.horizontalLayout.addLayout(self.verticalLayout)
        self.verticalLayout_4.addLayout(self.horizontalLayout)
        self.session_settings = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily(
            "Apple SD Gothic Neo"
            if sys.platform == "darwin"
            else "Nanum Gothic" if sys.platform.startswith("win") else "Noto Sans CJK"
        )
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        self.session_settings.setFont(font)
        self.session_settings.setStyleSheet("color: 'white';")
        self.session_settings.setObjectName("session_settings")
        self.verticalLayout_4.addWidget(self.session_settings)
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setMinimumSize(QtCore.QSize(260, 0))
        self.frame.setMaximumSize(QtCore.QSize(16777215, 25))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(68, 201, 176))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(68, 201, 176))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(68, 201, 176))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(68, 201, 176))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(68, 201, 176))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(68, 201, 176))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(68, 201, 176))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(68, 201, 176))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(68, 201, 176))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.PlaceholderText, brush)
        self.frame.setPalette(palette)
        self.frame.setAutoFillBackground(False)
        self.frame.setStyleSheet("background: rgb(68,201,176)")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.frame)
        self.horizontalLayout_4.setContentsMargins(1, 1, 1, 1)
        self.horizontalLayout_4.setSpacing(0)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.randomize_selection = QtWidgets.QPushButton(self.frame)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.MinimumExpanding,
            QtWidgets.QSizePolicy.MinimumExpanding,
        )
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.randomize_selection.sizePolicy().hasHeightForWidth()
        )
        self.randomize_selection.setSizePolicy(sizePolicy)
        self.randomize_selection.setMinimumSize(QtCore.QSize(258, 21))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(68, 201, 176))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(68, 201, 176))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(68, 201, 176))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(68, 201, 176))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(68, 201, 176))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(68, 201, 176))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(68, 201, 176))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(68, 201, 176))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(68, 201, 176))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.PlaceholderText, brush)
        self.randomize_selection.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily(
            "Apple SD Gothic Neo"
            if sys.platform == "darwin"
            else "Nanum Gothic" if sys.platform.startswith("win") else "Noto Sans CJK"
        )
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.randomize_selection.setFont(font)
        self.randomize_selection.setFocusPolicy(QtCore.Qt.NoFocus)
        self.randomize_selection.setAutoFillBackground(False)
        self.randomize_selection.setStyleSheet(
            "background: rgb(68,201,176); color: 'black';"
        )
        self.randomize_selection.setCheckable(True)
        self.randomize_selection.setChecked(False)
        self.randomize_selection.setAutoRepeat(False)
        self.randomize_selection.setAutoDefault(False)
        self.randomize_selection.setDefault(False)
        self.randomize_selection.setFlat(False)
        self.randomize_selection.setObjectName("randomize_selection")
        self.horizontalLayout_4.addWidget(self.randomize_selection)
        self.horizontalLayout_5.addWidget(self.frame)
        self.remove_duplicates = QtWidgets.QPushButton(self.centralwidget)
        self.remove_duplicates.setMinimumSize(QtCore.QSize(290, 20))
        font = QtGui.QFont()
        font.setFamily(
            "Apple SD Gothic Neo"
            if sys.platform == "darwin"
            else "Nanum Gothic" if sys.platform.startswith("win") else "Noto Sans CJK"
        )
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.remove_duplicates.setFont(font)
        self.remove_duplicates.setFocusPolicy(QtCore.Qt.NoFocus)
        self.remove_duplicates.setStyleSheet(
            "background: rgb(68,201,176); color: 'black';"
        )
        self.remove_duplicates.setObjectName("remove_duplicates")
        self.horizontalLayout_5.addWidget(self.remove_duplicates)
        self.verticalLayout_4.addLayout(self.horizontalLayout_5)
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily(
            "Apple SD Gothic Neo"
            if sys.platform == "darwin"
            else "Nanum Gothic" if sys.platform.startswith("win") else "Noto Sans CJK"
        )
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_7.setFont(font)
        self.label_7.setStyleSheet("color: 'white';")
        self.label_7.setObjectName("label_7")
        self.gridLayout.addWidget(self.label_7, 0, 0, 1, 1)
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily(
            "Apple SD Gothic Neo"
            if sys.platform == "darwin"
            else "Nanum Gothic" if sys.platform.startswith("win") else "Noto Sans CJK"
        )
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_5.setFont(font)
        self.label_5.setStyleSheet("color: 'white';")
        self.label_5.setAlignment(QtCore.Qt.AlignCenter)
        self.label_5.setObjectName("label_5")
        self.gridLayout.addWidget(self.label_5, 0, 3, 1, 1)
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily(
            "Apple SD Gothic Neo"
            if sys.platform == "darwin"
            else "Nanum Gothic" if sys.platform.startswith("win") else "Noto Sans CJK"
        )
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_6.setFont(font)
        self.label_6.setStyleSheet("color: 'white';")
        self.label_6.setAlignment(QtCore.Qt.AlignCenter)
        self.label_6.setObjectName("label_6")
        self.gridLayout.addWidget(self.label_6, 0, 4, 1, 1)
        self.image_amount_label = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily(
            "Apple SD Gothic Neo"
            if sys.platform == "darwin"
            else "Nanum Gothic" if sys.platform.startswith("win") else "Noto Sans CJK"
        )
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.image_amount_label.setFont(font)
        self.image_amount_label.setStyleSheet("color: 'white';")
        self.image_amount_label.setObjectName("image_amount_label")
        self.gridLayout.addWidget(self.image_amount_label, 1, 0, 1, 1)
        self.set_number_of_images = QtWidgets.QSpinBox(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily(
            "Apple SD Gothic Neo"
            if sys.platform == "darwin"
            else "Nanum Gothic" if sys.platform.startswith("win") else "Noto Sans CJK"
        )
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.set_number_of_images.setFont(font)
        self.set_number_of_images.setStyleSheet(
            "background: rgb(30,56,78); color: 'white';"
        )
        self.set_number_of_images.setFrame(False)
        self.set_number_of_images.setMaximum(999999999)
        self.set_number_of_images.setObjectName("set_number_of_images")
        self.gridLayout.addWidget(self.set_number_of_images, 1, 1, 1, 1)
        self.duration_label = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily(
            "Apple SD Gothic Neo"
            if sys.platform == "darwin"
            else "Nanum Gothic" if sys.platform.startswith("win") else "Noto Sans CJK"
        )
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.duration_label.setFont(font)
        self.duration_label.setStyleSheet("color: 'white';")
        self.duration_label.setAlignment(QtCore.Qt.AlignCenter)
        self.duration_label.setObjectName("duration_label")
        self.gridLayout.addWidget(self.duration_label, 1, 2, 1, 1)
        self.set_minutes = QtWidgets.QSpinBox(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily(
            "Apple SD Gothic Neo"
            if sys.platform == "darwin"
            else "Nanum Gothic" if sys.platform.startswith("win") else "Noto Sans CJK"
        )
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.set_minutes.setFont(font)
        self.set_minutes.setFocusPolicy(QtCore.Qt.WheelFocus)
        self.set_minutes.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.set_minutes.setStyleSheet("background: rgb(30,56,78); color: 'white';")
        self.set_minutes.setWrapping(False)
        self.set_minutes.setFrame(False)
        self.set_minutes.setAlignment(
            QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter
        )
        self.set_minutes.setKeyboardTracking(True)
        self.set_minutes.setMaximum(999999999)
        self.set_minutes.setObjectName("set_minutes")
        self.gridLayout.addWidget(self.set_minutes, 1, 3, 1, 1)
        self.set_seconds = QtWidgets.QSpinBox(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily(
            "Apple SD Gothic Neo"
            if sys.platform == "darwin"
            else "Nanum Gothic" if sys.platform.startswith("win") else "Noto Sans CJK"
        )
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.set_seconds.setFont(font)
        self.set_seconds.setFocusPolicy(QtCore.Qt.WheelFocus)
        self.set_seconds.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.set_seconds.setStyleSheet("background: rgb(30,56,78); color: 'white';")
        self.set_seconds.setFrame(False)
        self.set_seconds.setAlignment(
            QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter
        )
        self.set_seconds.setKeyboardTracking(True)
        self.set_seconds.setMaximum(59)
        self.set_seconds.setObjectName("set_seconds")
        self.gridLayout.addWidget(self.set_seconds, 1, 4, 1, 1)
        self.add_entry = QtWidgets.QPushButton(self.centralwidget)
        self.add_entry.setMinimumSize(QtCore.QSize(97, 0))
        font = QtGui.QFont()
        font.setFamily(
            "Apple SD Gothic Neo"
            if sys.platform == "darwin"
            else "Nanum Gothic" if sys.platform.startswith("win") else "Noto Sans CJK"
        )
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.add_entry.setFont(font)
        self.add_entry.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.add_entry.setAutoFillBackground(False)
        self.add_entry.setStyleSheet("background: rgb(68,201,176); color: 'black';")
        self.add_entry.setIconSize(QtCore.QSize(24, 24))
        self.add_entry.setAutoDefault(False)
        self.add_entry.setFlat(False)
        self.add_entry.setObjectName("add_entry")
        self.gridLayout.addWidget(self.add_entry, 1, 5, 1, 1)
        self.verticalLayout_4.addLayout(self.gridLayout)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.label_8 = QtWidgets.QLabel(self.centralwidget)
        self.label_8.setMaximumSize(QtCore.QSize(143, 16777215))
        font = QtGui.QFont()
        font.setFamily(
            "Apple SD Gothic Neo"
            if sys.platform == "darwin"
            else "Nanum Gothic" if sys.platform.startswith("win") else "Noto Sans CJK"
        )
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_8.setFont(font)
        self.label_8.setStyleSheet("color: 'white';")
        self.label_8.setObjectName("label_8")
        self.horizontalLayout_2.addWidget(self.label_8)
        self.preset_loader_box = QtWidgets.QComboBox(self.centralwidget)
        self.preset_loader_box.setMinimumSize(QtCore.QSize(250, 0))
        self.preset_loader_box.setBaseSize(QtCore.QSize(0, 0))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(30, 56, 78))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(30, 56, 78))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(30, 56, 78))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(45, 85, 117))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(30, 56, 78))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(30, 56, 78))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(30, 56, 78))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(45, 85, 117))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(30, 56, 78))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(30, 56, 78))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(30, 56, 78))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(45, 85, 117))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.PlaceholderText, brush)
        self.preset_loader_box.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily(
            "Apple SD Gothic Neo"
            if sys.platform == "darwin"
            else "Nanum Gothic" if sys.platform.startswith("win") else "Noto Sans CJK"
        )
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.preset_loader_box.setFont(font)
        self.preset_loader_box.setStyleSheet(
            "background: rgb(30,56,78); color: 'white';"
        )
        self.preset_loader_box.setEditable(True)
        self.preset_loader_box.setObjectName("preset_loader_box")
        self.preset_loader_box.addItem("")
        self.horizontalLayout_2.addWidget(self.preset_loader_box)
        self.save_preset = QtWidgets.QPushButton(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily(
            "Apple SD Gothic Neo"
            if sys.platform == "darwin"
            else "Nanum Gothic" if sys.platform.startswith("win") else "Noto Sans CJK"
        )
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.save_preset.setFont(font)
        self.save_preset.setStyleSheet("background: rgb(68,201,176); color: 'black';")
        self.save_preset.setObjectName("save_preset")
        self.horizontalLayout_2.addWidget(self.save_preset)
        self.delete_preset = QtWidgets.QPushButton(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily(
            "Apple SD Gothic Neo"
            if sys.platform == "darwin"
            else "Nanum Gothic" if sys.platform.startswith("win") else "Noto Sans CJK"
        )
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.delete_preset.setFont(font)
        self.delete_preset.setStyleSheet("background: rgb(68,201,176); color: 'black';")
        self.delete_preset.setObjectName("delete_preset")
        self.horizontalLayout_2.addWidget(self.delete_preset)
        self.verticalLayout_4.addLayout(self.horizontalLayout_2)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setSpacing(0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.entry_table = QtWidgets.QTableWidget(self.centralwidget)
        self.entry_table.setMinimumSize(QtCore.QSize(0, 180))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(30, 56, 78))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(30, 56, 78))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(30, 56, 78))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(97, 209, 189))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Highlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(45, 85, 117))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.HighlightedText, brush)
        brush = QtGui.QBrush(QtGui.QColor(45, 85, 117))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(30, 56, 78))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(30, 56, 78))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(30, 56, 78))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(68, 201, 176))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Highlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(45, 85, 117))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.HighlightedText, brush)
        brush = QtGui.QBrush(QtGui.QColor(45, 85, 117))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(30, 56, 78))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(30, 56, 78))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(30, 56, 78))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 120, 215))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Highlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(45, 85, 117))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.HighlightedText, brush)
        brush = QtGui.QBrush(QtGui.QColor(45, 85, 117))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.PlaceholderText, brush)
        self.entry_table.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily(
            "Apple SD Gothic Neo"
            if sys.platform == "darwin"
            else "Nanum Gothic" if sys.platform.startswith("win") else "Noto Sans CJK"
        )
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.entry_table.setFont(font)
        self.entry_table.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.entry_table.setAutoFillBackground(False)
        self.entry_table.setStyleSheet("background: rgb(30,56,78); color: 'white';")
        self.entry_table.setInputMethodHints(QtCore.Qt.ImhDigitsOnly)
        self.entry_table.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.entry_table.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.entry_table.setLineWidth(1)
        self.entry_table.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.entry_table.setEditTriggers(
            QtWidgets.QAbstractItemView.AnyKeyPressed
            | QtWidgets.QAbstractItemView.DoubleClicked
            | QtWidgets.QAbstractItemView.EditKeyPressed
        )
        self.entry_table.setDragEnabled(False)
        self.entry_table.setDragDropOverwriteMode(False)
        self.entry_table.setDragDropMode(QtWidgets.QAbstractItemView.NoDragDrop)
        self.entry_table.setDefaultDropAction(QtCore.Qt.IgnoreAction)
        self.entry_table.setAlternatingRowColors(True)
        self.entry_table.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.entry_table.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.entry_table.setHorizontalScrollMode(
            QtWidgets.QAbstractItemView.ScrollPerItem
        )
        self.entry_table.setShowGrid(False)
        self.entry_table.setGridStyle(QtCore.Qt.SolidLine)
        self.entry_table.setCornerButtonEnabled(True)
        self.entry_table.setRowCount(0)
        self.entry_table.setColumnCount(3)
        self.entry_table.setObjectName("entry_table")
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        font = QtGui.QFont()
        brush = QtGui.QBrush(QtGui.QColor("black"))

        # Try to set the preferred font, fallback if not available
        font.setFamily(
            "Apple SD Gothic Neo"
            if sys.platform == "darwin"
            else "Nanum Gothic" if sys.platform.startswith("win") else "Noto Sans CJK"
        )
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(85)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor("black"))
        brush.setStyle(QtCore.Qt.SolidPattern)
        item.setForeground(brush)
        item.setBackground(QtGui.QColor("white"))
        self.entry_table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        font = QtGui.QFont()
        font.setFamily(
            "Apple SD Gothic Neo"
            if sys.platform == "darwin"
            else "Nanum Gothic" if sys.platform.startswith("win") else "Noto Sans CJK"
        )
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(85)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor("black"))
        brush.setStyle(QtCore.Qt.SolidPattern)
        item.setForeground(brush)
        item.setBackground(QtGui.QColor("white"))
        self.entry_table.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        font = QtGui.QFont()
        font.setFamily(
            "Apple SD Gothic Neo"
            if sys.platform == "darwin"
            else "Nanum Gothic" if sys.platform.startswith("win") else "Noto Sans CJK"
        )
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(85)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor("black"))
        brush.setStyle(QtCore.Qt.SolidPattern)
        item.setForeground(brush)
        item.setBackground(QtGui.QColor("white"))
        self.entry_table.setHorizontalHeaderItem(2, item)
        self.entry_table.horizontalHeader().setVisible(True)
        self.entry_table.horizontalHeader().setCascadingSectionResizes(True)
        self.entry_table.horizontalHeader().setDefaultSectionSize(160)
        self.entry_table.horizontalHeader().setHighlightSections(True)
        self.entry_table.horizontalHeader().setMinimumSectionSize(60)
        self.entry_table.horizontalHeader().setSortIndicatorShown(False)
        self.entry_table.horizontalHeader().setStretchLastSection(True)
        self.entry_table.verticalHeader().setVisible(False)
        self.verticalLayout_2.addWidget(self.entry_table)
        self.total_table = QtWidgets.QTableWidget(self.centralwidget)
        self.total_table.setMinimumSize(QtCore.QSize(0, 33))
        self.total_table.setMaximumSize(QtCore.QSize(16777215, 33))
        font = QtGui.QFont()
        font.setFamily(
            "Apple SD Gothic Neo"
            if sys.platform == "darwin"
            else "Nanum Gothic" if sys.platform.startswith("win") else "Noto Sans CJK"
        )
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(85)
        self.total_table.setFont(font)
        self.total_table.setStyleSheet("background: rgb(30,56,78); color: 'white';")
        self.total_table.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.total_table.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.total_table.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.total_table.setDragDropOverwriteMode(False)
        self.total_table.setAlternatingRowColors(True)
        self.total_table.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.total_table.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.total_table.setShowGrid(False)
        self.total_table.setColumnCount(3)
        self.total_table.setObjectName("total_table")
        self.total_table.setRowCount(0)
        self.total_table.horizontalHeader().setVisible(False)
        self.total_table.horizontalHeader().setCascadingSectionResizes(True)
        self.total_table.horizontalHeader().setDefaultSectionSize(160)
        self.total_table.horizontalHeader().setMinimumSectionSize(60)
        self.total_table.horizontalHeader().setStretchLastSection(True)
        self.total_table.verticalHeader().setVisible(False)
        self.total_table.verticalHeader().setDefaultSectionSize(33)
        self.verticalLayout_2.addWidget(self.total_table)
        self.horizontalLayout_3.addLayout(self.verticalLayout_2)
        self.verticalLayout_3 = QtWidgets.QVBoxLayout()
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.remove_entry = QtWidgets.QPushButton(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily(
            "Apple SD Gothic Neo"
            if sys.platform == "darwin"
            else "Nanum Gothic" if sys.platform.startswith("win") else "Noto Sans CJK"
        )
        font.setPointSize(10)
        self.remove_entry.setFont(font)
        self.remove_entry.setStyleSheet("background: rgb(68,201,176); color: 'black';")
        self.remove_entry.setText("")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(
            QtGui.QPixmap(":/icons/icons/Minus.png"),
            QtGui.QIcon.Normal,
            QtGui.QIcon.Off,
        )
        self.remove_entry.setIcon(icon4)
        self.remove_entry.setIconSize(QtCore.QSize(24, 24))
        self.remove_entry.setObjectName("remove_entry")
        self.verticalLayout_3.addWidget(self.remove_entry)
        self.move_entry_up = QtWidgets.QPushButton(self.centralwidget)
        self.move_entry_up.setStyleSheet("background: rgb(68,201,176); color: 'white';")
        self.move_entry_up.setText("")
        icon5 = QtGui.QIcon()
        icon5.addPixmap(
            QtGui.QPixmap(":/icons/icons/Arrow Small Up.png"),
            QtGui.QIcon.Normal,
            QtGui.QIcon.Off,
        )
        self.move_entry_up.setIcon(icon5)
        self.move_entry_up.setIconSize(QtCore.QSize(24, 24))
        self.move_entry_up.setObjectName("move_entry_up")
        self.verticalLayout_3.addWidget(self.move_entry_up)
        self.move_entry_down = QtWidgets.QPushButton(self.centralwidget)
        self.move_entry_down.setStyleSheet(
            "background: rgb(68,201,176); color: 'white';"
        )
        self.move_entry_down.setText("")
        icon6 = QtGui.QIcon()
        icon6.addPixmap(
            QtGui.QPixmap(":/icons/icons/Arrow Small Down.png"),
            QtGui.QIcon.Normal,
            QtGui.QIcon.Off,
        )
        self.move_entry_down.setIcon(icon6)
        self.move_entry_down.setIconSize(QtCore.QSize(24, 24))
        self.move_entry_down.setAutoDefault(False)
        self.move_entry_down.setDefault(False)
        self.move_entry_down.setFlat(False)
        self.move_entry_down.setObjectName("move_entry_down")
        self.verticalLayout_3.addWidget(self.move_entry_down)
        self.reset_table = QtWidgets.QPushButton(self.centralwidget)
        self.reset_table.setStyleSheet("background: rgb(68,201,176); color: 'white';")
        self.reset_table.setText("")
        icon7 = QtGui.QIcon()
        icon7.addPixmap(
            QtGui.QPixmap(":/icons/icons/restart.png"),
            QtGui.QIcon.Normal,
            QtGui.QIcon.Off,
        )
        self.reset_table.setIcon(icon7)
        self.reset_table.setIconSize(QtCore.QSize(24, 24))
        self.reset_table.setDefault(False)
        self.reset_table.setFlat(False)
        self.reset_table.setObjectName("reset_table")
        self.verticalLayout_3.addWidget(self.reset_table)
        spacerItem = QtWidgets.QSpacerItem(
            20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding
        )
        self.verticalLayout_3.addItem(spacerItem)
        self.horizontalLayout_3.addLayout(self.verticalLayout_3)
        self.verticalLayout_4.addLayout(self.horizontalLayout_3)
        self.dialog_buttons = QtWidgets.QDialogButtonBox(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily(
            "Apple SD Gothic Neo"
            if sys.platform == "darwin"
            else "Nanum Gothic" if sys.platform.startswith("win") else "Noto Sans CJK"
        )
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(85)
        self.dialog_buttons.setFont(font)
        self.dialog_buttons.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.dialog_buttons.setStyleSheet(
            "background: rgb(68,201,176); color: 'black';"
        )
        self.dialog_buttons.setStandardButtons(
            QtWidgets.QDialogButtonBox.StandardButton.Close
            | QtWidgets.QDialogButtonBox.StandardButton.Ok
        )
        self.dialog_buttons.setCenterButtons(False)
        self.dialog_buttons.setObjectName("dialog_buttons")
        for button in self.dialog_buttons.buttons():
            button.setFont(font)
        self.verticalLayout_4.addWidget(self.dialog_buttons)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 576, 31))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.add_items.clicked.connect(MainWindow.open_files)
        self.dialog_buttons.rejected.connect(MainWindow.close)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        MainWindow.setTabOrder(self.add_folder, self.add_items)
        MainWindow.setTabOrder(self.add_items, self.clear_items)
        MainWindow.setTabOrder(self.clear_items, self.randomize_selection)
        MainWindow.setTabOrder(self.randomize_selection, self.remove_duplicates)
        MainWindow.setTabOrder(self.remove_duplicates, self.set_number_of_images)
        MainWindow.setTabOrder(self.set_number_of_images, self.set_minutes)
        MainWindow.setTabOrder(self.set_minutes, self.set_seconds)
        MainWindow.setTabOrder(self.set_seconds, self.add_entry)
        MainWindow.setTabOrder(self.add_entry, self.preset_loader_box)
        MainWindow.setTabOrder(self.preset_loader_box, self.save_preset)
        MainWindow.setTabOrder(self.save_preset, self.delete_preset)
        MainWindow.setTabOrder(self.delete_preset, self.entry_table)
        MainWindow.setTabOrder(self.entry_table, self.remove_entry)
        MainWindow.setTabOrder(self.remove_entry, self.move_entry_up)
        MainWindow.setTabOrder(self.move_entry_up, self.move_entry_down)
        MainWindow.setTabOrder(self.move_entry_down, self.reset_table)
        MainWindow.setTabOrder(self.reset_table, self.total_table)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Reference Practice"))
        self.select_images.setText(_translate("MainWindow", "Selection"))
        self.selected_items.setHtml(
            _translate(
                "MainWindow",
                '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"'
                ' "http://www.w3.org/TR/REC-html40/strict.dtd">\n<html><head><meta'
                ' name="qrichtext" content="1" /><style type="text/css">\np, li {'
                ' white-space: pre-wrap; }\n</style></head><body style="'
                " font-family:'Nanum Gothic'; font-size:13pt; font-weight:400;"
                ' font-style:normal;">\n<p style="-qt-paragraph-type:empty;'
                " margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px;"
                ' -qt-block-indent:0; text-indent:0px;"><br /></p></body></html>',
            )
        )
        self.selected_items.setPlaceholderText(
            _translate(
                "MainWindow",
                "Add files and/or folders. Supported file types: jpg, jpeg, png,"
                " bmp.\nAdding a folder adds all the files inside it and its"
                " subfolders.\nSelection is not randomized by default. ",
            )
        )
        self.add_folder.setToolTip(
            _translate(
                "MainWindow",
                '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"'
                ' "http://www.w3.org/TR/REC-html40/strict.dtd">\n<html><head><meta'
                ' name="qrichtext" content="1" /><style type="text/css">\np, li {'
                ' white-space: pre-wrap; }\n</style></head><body style="'
                " font-family:'Nanum Gothic'; font-size:8pt; font-weight:400;"
                ' font-style:normal;">\n<p style=" margin-top:0px; margin-bottom:0px;'
                " margin-left:0px; margin-right:0px; -qt-block-indent:0;"
                ' text-indent:0px;"><span style=" font-size:13pt; color:#000000;">Open'
                " folder(s). Does not open folders in chosen folder</span></p>\n<p"
                ' style=" margin-top:0px; margin-bottom:0px; margin-left:0px;'
                ' margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style="'
                " font-size:13pt; font-weight:550;"
                ' color:#000000;">F</span></p></body></html>',
            )
        )
        self.add_folder.setText(_translate("MainWindow", "..."))
        self.add_folder.setShortcut(_translate("MainWindow", "F"))
        self.add_items.setToolTip(
            _translate(
                "MainWindow",
                '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"'
                ' "http://www.w3.org/TR/REC-html40/strict.dtd">\n<html><head><meta'
                ' name="qrichtext" content="1" /><style type="text/css">\np, li {'
                ' white-space: pre-wrap; }\n</style></head><body style="'
                " font-family:'Nanum Gothic'; font-size:8pt; font-weight:400;"
                ' font-style:normal;">\n<p style=" margin-top:0px; margin-bottom:0px;'
                " margin-left:0px; margin-right:0px; -qt-block-indent:0;"
                ' text-indent:0px;"><span style=" font-size:13pt; color:#000000;">Open'
                ' file(s)</span></p>\n<p style=" margin-top:0px; margin-bottom:0px;'
                " margin-left:0px; margin-right:0px; -qt-block-indent:0;"
                ' text-indent:0px;"><span style=" font-size:13pt; font-weight:550;'
                ' color:#000000;">Ctrl + F</span></p></body></html>',
            )
        )
        self.add_items.setText(_translate("MainWindow", "..."))
        self.add_items.setShortcut(_translate("MainWindow", "Ctrl+F"))
        self.clear_items.setToolTip(
            _translate(
                "MainWindow",
                '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"'
                ' "http://www.w3.org/TR/REC-html40/strict.dtd">\n<html><head><meta'
                ' name="qrichtext" content="1" /><style type="text/css">\np, li {'
                ' white-space: pre-wrap; }\n</style></head><body style="'
                " font-family:'Nanum Gothic'; font-size:8pt; font-weight:400;"
                ' font-style:normal;">\n<p style=" margin-top:0px; margin-bottom:0px;'
                " margin-left:0px; margin-right:0px; -qt-block-indent:0;"
                ' text-indent:0px;"><span style=" font-size:13pt; color:#000000;">Clear'
                ' selection of items</span></p>\n<p style=" margin-top:0px;'
                " margin-bottom:0px; margin-left:0px; margin-right:0px;"
                ' -qt-block-indent:0; text-indent:0px;"><span style=" font-size:13pt;'
                ' font-weight:550; color:#000000;">Ctrl + Shift +'
                " C</span></p></body></html>",
            )
        )
        self.clear_items.setShortcut(_translate("MainWindow", "Ctrl+Shift+C"))
        self.session_settings.setText(_translate("MainWindow", "Session Settings"))
        self.randomize_selection.setToolTip(
            _translate(
                "MainWindow",
                '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"'
                ' "http://www.w3.org/TR/REC-html40/strict.dtd">\n<html><head><meta'
                ' name="qrichtext" content="1" /><style type="text/css">\np, li {'
                ' white-space: pre-wrap; }\n</style></head><body style="'
                " font-family:'Nanum Gothic'; font-size:8pt; font-weight:400;"
                ' font-style:normal;">\n<p style=" margin-top:0px; margin-bottom:0px;'
                " margin-left:0px; margin-right:0px; -qt-block-indent:0;"
                ' text-indent:0px;"><span style=" font-size:13pt;'
                ' color:#000000;">Toggle randomization of selection</span></p>\n<p'
                ' style=" margin-top:0px; margin-bottom:0px; margin-left:0px;'
                ' margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style="'
                ' font-size:13pt; font-weight:550; color:#000000;">Ctrl +'
                " R</span></p></body></html>",
            )
        )
        self.randomize_selection.setText(_translate("MainWindow", "Randomize"))
        self.randomize_selection.setShortcut(_translate("MainWindow", "Ctrl+R"))
        self.remove_duplicates.setToolTip(
            _translate(
                "MainWindow",
                '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"'
                ' "http://www.w3.org/TR/REC-html40/strict.dtd">\n<html><head><meta'
                ' name="qrichtext" content="1" /><style type="text/css">\np, li {'
                ' white-space: pre-wrap; }\n</style></head><body style="'
                " font-family:'Nanum Gothic'; font-size:8pt; font-weight:400;"
                ' font-style:normal;">\n<p style=" margin-top:0px; margin-bottom:0px;'
                " margin-left:0px; margin-right:0px; -qt-block-indent:0;"
                ' text-indent:0px;"><span style=" font-size:13pt;'
                ' color:#000000;">Remove duplicate selections</span></p>\n<p style="'
                " margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px;"
                ' -qt-block-indent:0; text-indent:0px;"><span style=" font-size:13pt;'
                ' font-weight:550; color:#000000;">Ctrl + 1</span></p></body></html>',
            )
        )
        self.remove_duplicates.setText(_translate("MainWindow", "Remove Duplicates"))
        self.remove_duplicates.setShortcut(_translate("MainWindow", "Ctrl+1"))
        self.label_7.setToolTip(
            _translate(
                "MainWindow",
                '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"'
                ' "http://www.w3.org/TR/REC-html40/strict.dtd">\n<html><head><meta'
                ' name="qrichtext" content="1" /><style type="text/css">\np, li {'
                ' white-space: pre-wrap; }\n</style></head><body style="'
                " font-family:'Nanum Gothic'; font-size:13pt; font-weight:400;"
                " font-style:normal;color:'white';\">\n<p style=\" margin-top:0px;"
                " margin-bottom:0px; margin-left:0px; margin-right:0px;"
                ' -qt-block-indent:0; text-indent:0px;">An entry will display a set'
                " number of images for a set duration of time</p></body></html>",
            )
        )
        self.label_7.setText(_translate("MainWindow", "Set Entry"))
        self.label_5.setText(_translate("MainWindow", "Minutes"))
        self.label_6.setText(_translate("MainWindow", "Seconds"))
        self.image_amount_label.setText(_translate("MainWindow", "Number of Images"))
        self.duration_label.setText(_translate("MainWindow", "Duration"))
        self.add_entry.setToolTip(
            _translate(
                "MainWindow",
                '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"'
                ' "http://www.w3.org/TR/REC-html40/strict.dtd">\n<html><head><meta'
                ' name="qrichtext" content="1" /><style type="text/css">\np, li {'
                ' white-space: pre-wrap; }\n</style></head><body style="'
                " font-family:'Nanum Gothic'; font-size:8pt; font-weight:400;"
                ' font-style:normal;">\n<p style=" margin-top:0px; margin-bottom:0px;'
                " margin-left:0px; margin-right:0px; -qt-block-indent:0;"
                ' text-indent:0px;"><span style=" font-size:13pt; color:#000000;">Add'
                ' entry to the schedule below</span></p>\n<p style=" margin-top:0px;'
                " margin-bottom:0px; margin-left:0px; margin-right:0px;"
                ' -qt-block-indent:0; text-indent:0px;"><span style=" font-size:13pt;'
                ' font-weight:550; color:#000000;">Shift + Enter</span></p>\n<p'
                ' style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px;'
                " margin-left:0px; margin-right:0px; -qt-block-indent:0;"
                ' text-indent:0px;"><br /></p></body></html>',
            )
        )
        self.add_entry.setText(_translate("MainWindow", "Add"))
        self.add_entry.setShortcut(_translate("MainWindow", "Shift+Enter"))
        self.label_8.setToolTip(
            _translate(
                "MainWindow",
                '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"'
                ' "http://www.w3.org/TR/REC-html40/strict.dtd">\n<html><head><meta'
                ' name="qrichtext" content="1" /><style type="text/css">\np, li {'
                ' white-space: pre-wrap; }\n</style></head><body style="'
                " font-family:'Nanum Gothic'; font-size:13pt; font-weight:400;"
                " font-style:normal;color:'white';\">\n<p style=\" margin-top:0px;"
                " margin-bottom:0px; margin-left:0px; margin-right:0px;"
                ' -qt-block-indent:0; text-indent:0px;">Presets are saved schedules'
                " </p></body></html>",
            )
        )
        self.label_8.setText(_translate("MainWindow", "Preset:"))
        self.preset_loader_box.setToolTip(
            _translate(
                "MainWindow",
                '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"'
                ' "http://www.w3.org/TR/REC-html40/strict.dtd">\n<html><head><meta'
                ' name="qrichtext" content="1" /><style type="text/css">\np, li {'
                ' white-space: pre-wrap; }\n</style></head><body style="'
                " font-family:'Nanum Gothic'; font-size:13pt; font-weight:400;"
                " font-style:normal;color:'white';\">\n<p style=\" margin-top:0px;"
                " margin-bottom:0px; margin-left:0px; margin-right:0px;"
                ' -qt-block-indent:0; text-indent:0px;">Load a preset schedule onto the'
                " table below. Duplicate saves will be overwritten</p></body></html>",
            )
        )
        self.preset_loader_box.setCurrentText(_translate("MainWindow", "<New Preset>"))
        self.preset_loader_box.setPlaceholderText(
            _translate("MainWindow", "<Name of new preset>")
        )
        self.preset_loader_box.setItemText(0, _translate("MainWindow", "Default"))
        self.save_preset.setToolTip(
            _translate(
                "MainWindow",
                '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"'
                ' "http://www.w3.org/TR/REC-html40/strict.dtd">\n<html><head><meta'
                ' name="qrichtext" content="1" /><style type="text/css">\np, li {'
                ' white-space: pre-wrap; }\n</style></head><body style="'
                " font-family:'Nanum Gothic'; font-size:8pt; font-weight:400;"
                ' font-style:normal;">\n<p style=" margin-top:0px; margin-bottom:0px;'
                " margin-left:0px; margin-right:0px; -qt-block-indent:0;"
                ' text-indent:0px;"><span style=" font-size:13pt; color:#000000;">Saves'
                " preset under the name entered in the dropdown menu</span></p>\n<p"
                ' style=" margin-top:0px; margin-bottom:0px; margin-left:0px;'
                ' margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style="'
                " font-size:13pt; font-weight:550; font-weight: 550;"
                ' color:#000000;">Ctrl + S</span></p></body></html>',
            )
        )
        self.save_preset.setText(_translate("MainWindow", "Save Preset"))
        self.save_preset.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.delete_preset.setToolTip(
            _translate(
                "MainWindow",
                '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"'
                ' "http://www.w3.org/TR/REC-html40/strict.dtd">\n<html><head><meta'
                ' name="qrichtext" content="1" /><style type="text/css">\np, li {'
                ' white-space: pre-wrap; }\n</style></head><body style="'
                " font-family:'Nanum Gothic'; font-size:8pt; font-weight:400;"
                ' font-style:normal;">\n<p style=" margin-top:0px; margin-bottom:0px;'
                " margin-left:0px; margin-right:0px; -qt-block-indent:0;"
                ' text-indent:0px;"><span style=" font-size:13pt;'
                ' color:#000000;">Deletes preset selected in the dropdown'
                ' menu</span></p>\n<p style=" margin-top:0px; margin-bottom:0px;'
                " margin-left:0px; margin-right:0px; -qt-block-indent:0;"
                ' text-indent:0px;"><span style=" font-size:13pt; font-weight:550;'
                ' color:#000000;">Ctrl + Shift + D</span></p></body></html>',
            )
        )
        self.delete_preset.setText(_translate("MainWindow", "Delete Preset"))
        self.delete_preset.setShortcut(_translate("MainWindow", "Ctrl+Shift+D"))
        self.entry_table.setToolTip(
            _translate(
                "MainWindow",
                '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"'
                ' "http://www.w3.org/TR/REC-html40/strict.dtd">\n<html><head><meta'
                ' name="qrichtext" content="1" /><style type="text/css">\np, li {'
                " white-space: pre-wrap; } \nQTableWidget::item{"
                ' selection-background-color: black;}\n</style></head><body style="'
                " font-family:'Nanum Gothic'; font-size:8pt; font-weight:400;"
                ' font-style:normal;">\n<p style=" margin-top:0px; margin-bottom:0px;'
                " margin-left:0px; margin-right:0px; -qt-block-indent:0;"
                ' text-indent:0px;"><span style=" font-size:13pt;'
                ' color:#FFFFFF;">Double-click to modify.</span></p></body></html>',
            )
        )
        self.entry_table.setSortingEnabled(False)
        item = self.entry_table.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Entry"))
        item = self.entry_table.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Number of Images"))
        item = self.entry_table.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Duration"))
        self.remove_entry.setToolTip(
            _translate(
                "MainWindow",
                '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"'
                ' "http://www.w3.org/TR/REC-html40/strict.dtd">\n<html><head><meta'
                ' name="qrichtext" content="1" /><style type="text/css">\np, li {'
                ' white-space: pre-wrap; }\n</style></head><body style="'
                " font-family:'Nanum Gothic'; font-size:8pt; font-weight:400;"
                ' font-style:normal;">\n<p style=" margin-top:0px; margin-bottom:0px;'
                " margin-left:0px; margin-right:0px; -qt-block-indent:0;"
                ' text-indent:0px;"><span style=" font-size:13pt;'
                ' color:#000000;">Delete entry</span></p>\n<p style=" margin-top:0px;'
                " margin-bottom:0px; margin-left:0px; margin-right:0px;"
                ' -qt-block-indent:0; text-indent:0px;"><span style=" font-size:13pt;'
                ' font-weight:550; color:#000000;">D</span></p></body></html>',
            )
        )
        self.remove_entry.setShortcut(_translate("MainWindow", "D"))
        self.move_entry_up.setToolTip(
            _translate(
                "MainWindow",
                '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"'
                ' "http://www.w3.org/TR/REC-html40/strict.dtd">\n<html><head><meta'
                ' name="qrichtext" content="1" /><style type="text/css">\np, li {'
                ' white-space: pre-wrap; }\n</style></head><body style="'
                " font-family:'Nanum Gothic'; font-size:8pt; font-weight:400;"
                ' font-style:normal;">\n<p style=" margin-top:0px; margin-bottom:0px;'
                " margin-left:0px; margin-right:0px; -qt-block-indent:0;"
                ' text-indent:0px;"><span style=" font-size:13pt; color:#000000;">Move'
                ' entry up</span></p>\n<p style=" margin-top:0px; margin-bottom:0px;'
                " margin-left:0px; margin-right:0px; -qt-block-indent:0;"
                ' text-indent:0px;"><span style=" font-size:13pt; font-weight:550;'
                ' color:#000000;">W</span></p></body></html>',
            )
        )
        self.move_entry_up.setShortcut(_translate("MainWindow", "W"))
        self.move_entry_down.setToolTip(
            _translate(
                "MainWindow",
                '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"'
                ' "http://www.w3.org/TR/REC-html40/strict.dtd">\n<html><head><meta'
                ' name="qrichtext" content="1" /><style type="text/css">\np, li {'
                ' white-space: pre-wrap; }\n</style></head><body style="'
                " font-family:'Nanum Gothic'; font-size:8pt; font-weight:400;"
                ' font-style:normal;">\n<p style=" margin-top:0px; margin-bottom:0px;'
                " margin-left:0px; margin-right:0px; -qt-block-indent:0;"
                ' text-indent:0px;"><span style=" font-size:13pt; color:#000000;">Move'
                ' entry down</span></p>\n<p style=" margin-top:0px; margin-bottom:0px;'
                " margin-left:0px; margin-right:0px; -qt-block-indent:0;"
                ' text-indent:0px;"><span style=" font-size:13pt; font-weight:550;'
                ' color:#000000;">S</span></p></body></html>',
            )
        )
        self.move_entry_down.setShortcut(_translate("MainWindow", "S"))
        self.reset_table.setToolTip(
            _translate(
                "MainWindow",
                '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"'
                ' "http://www.w3.org/TR/REC-html40/strict.dtd">\n<html><head><meta'
                ' name="qrichtext" content="1" /><style type="text/css">\np, li {'
                ' white-space: pre-wrap; }\n</style></head><body style="'
                " font-family:'Nanum Gothic'; font-size:8pt; font-weight:400;"
                ' font-style:normal;">\n<p style=" margin-top:0px; margin-bottom:0px;'
                " margin-left:0px; margin-right:0px; -qt-block-indent:0;"
                ' text-indent:0px;"><span style=" font-size:13pt; color:#000000;">Clear'
                ' all entries</span></p>\n<p style=" margin-top:0px; margin-bottom:0px;'
                " margin-left:0px; margin-right:0px; -qt-block-indent:0;"
                ' text-indent:0px;"><span style=" font-size:13pt; font-weight:550;'
                ' color:#000000;">C</span></p></body></html>',
            )
        )
        self.reset_table.setShortcut(_translate("MainWindow", "C"))
        self.statusbar.setAccessibleDescription(_translate("MainWindow", "SDF"))
